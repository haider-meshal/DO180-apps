------------------------------------------------------------------------------------------------------------------
Lab Excersise (1)
------------------------------------------------------------------------------------------------------------------
lab container-create start
podman run --name mysql-basic -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80:1
podman ps --format "{{.ID}} {{.Image}} {{.Names}}"
podman exec -it mysql-basic /bin/bash
mysql -uroot
show databases;
use items;
CREATE TABLE Projects (id int NOT NULL,name varchar(255) DEFAULT NULL,code varchar(255) DEFAULT NULL,PRIMARY KEY (id));
show tables;
insert into Projects (id, name, code) values (1,'DevOps','DO180');
select * from Projects;
exit
exit
lab container-create finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (2)
------------------------------------------------------------------------------------------------------------------
lab container-rootless start
sudo podman run --rm --name asroot -ti registry.access.redhat.com/ubi8:latest /bin/bash
whoami
id
sleep 1000
(in other term) sudo ps -ef | grep "sleep 1000"
^C
exit
podman run --rm --name asuser -ti registry.access.redhat.com/ubi8:latest /bin/bash
whoami
id
sleep 2000
sudo ps -ef | grep "sleep 2000" | grep -v grep
lab container-rootless finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (3)
------------------------------------------------------------------------------------------------------------------
lab container-review start
podman run --name httpd-basic -d -p 8080:80 quay.io/redhattraining/httpd-parent:2.4
curl http://127.0.0.1:8080
podman exec -it httpd-basic /bin/bash
vi /var/www/html/index.html
curl http://127.0.0.1:8080
lab container-review grade
lab container-review finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (4)
------------------------------------------------------------------------------------------------------------------
lab manage-lifecycle start
podman login registry.redhat.io
podman run --name mysql-db registry.redhat.io/rhel8/mysql-80:1
podman run --name mysql -d -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
podman ps --format="{{.ID}} {{.Names}} {{.Status}}"
podman cp /home/student/DO180/labs/manage-lifecycle/db.sql mysql:/
podman exec mysql /bin/bash -c 'mysql -uuser1 -pmypa55 items < /db.sql'
podman run --name mysql-2 -it registry.redhat.io/rhel8/mysql-80:1 /bin/bash
mysql -uroot
exit
podman ps -a --format="{{.ID}} {{.Names}} {{.Status}}"
podman exec mysql /bin/bash -c 'mysql -uuser1 -pmypa55 -e "select * from items.Projects;"'
lab manage-lifecycle finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (5)
------------------------------------------------------------------------------------------------------------------
lab manage-storage start
mkdir -pv /home/student/local/mysql
sudo semanage fcontext -a -t container_file_t '/home/student/local/mysql(/.*)?'
sudo restorecon -R /home/student/local/mysql
ls -ldZ /home/student/local/mysql
podman unshare chown 27:27 /home/student/local/mysql
podman login registry.redhat.io
podman pull registry.redhat.io/rhel8/mysql-80:1
podman run --name persist-db -d -v /home/student/local/mysql:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
podman ps --format="{{.ID}} {{.Names}} {{.Status}}"
ls -ld /home/student/local/mysql/items
podman unshare ls -ld /home/student/local/mysql/items
lab manage-storage finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (6)
------------------------------------------------------------------------------------------------------------------
lab manage-networking start
podman login registry.redhat.io
podman run --name mysqldb-port -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
podman ps --format="{{.ID}} {{.Names}} {{.Ports}}"
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-networking/db.sql
podman exec -it mysqldb-port mysql -uroot items -e "SELECT * FROM Item"
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "SELECT * FROM Item"
podman exec -it mysqldb-port /bin/bash
mysql -uroot items -e "SELECT * FROM Item"
exit
lab manage-networking finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (7)
------------------------------------------------------------------------------------------------------------------
lab manage-review start
mkdir -pv /home/student/local/mysql
sudo semanage fcontext -a -t container_file_t '/home/student/local/mysql(/.*)?'
sudo restorecon -R /home/student/local/mysql
podman unshare chown 27:27 /home/student/local/mysql
podman login registry.redhat.io
podman run --name mysql-1 -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items < /home/student/DO180/labs/manage-review/db.sql
podman stop mysql-1
podman run --name mysql-2 -d -v /home/student/local/mysql:/var/lib/mysql/data -p 13306:3306 -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1
podman ps -a > /tmp/my-containers
podman exec -it mysql-2 /bin/bash
mysql -uroot items -e "SELECT * FROM Item"
exit
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P13306 items -e "insert into Item (description, done) values ('Finished lab', 1)"
podman rm mysql-1
lab manage-review grade
lab manage-review finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (8)
------------------------------------------------------------------------------------------------------------------
lab image-operations start
podman login quay.io
podman run -d --name official-httpd -p 8180:80 quay.io/redhattraining/httpd-parent
podman exec -it official-httpd /bin/bash
echo "DO180 Page" > /var/www/html/do180.html
exit
curl 127.0.0.1:8180/do180.html
podman diff official-httpd
podman stop official-httpd
podman commit -a 'Haider MESHAL' official-httpd do180-custom-httpd
podman images
source /usr/local/etc/ocp4.config
podman tag do180-custom-httpd quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
podman images
podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
podman pull -q quay.io/${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
podman run -d --name test-httpd -p 8280:80 ${RHT_OCP4_QUAY_USER}/do180-custom-httpd:v1.0
curl http://localhost:8280/do180.html
lab image-operations finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (9)
------------------------------------------------------------------------------------------------------------------
lab image-review start
podman pull -q quay.io/redhattraining/nginx:1.17
podman run -d --name official-nginx -p 8080:80 quay.io/redhattraining/nginx:1.17
podman exec -it official-nginx /bin/bash
echo "DO180" > /usr/share/nginx/html/index.html
exit
curl 127.0.0.1:8080/index.html
podman stop official-nginx
podman commit -a 'Haider MESHAL' official-nginx do180/mynginx
podman tag do180/mynginx do180/mynginx:v1.0-SNAPSHOT
podman run -d --name official-nginx-dev -p 8080:80 do180/mynginx:v1.0-SNAPSHOT
podman exec -it official-nginx-dev /bin/bash
echo "DO180 Page" > /usr/share/nginx/html/index.html
exit
curl 127.0.0.1:8080/index.html
podman stop official-nginx-dev
podman commit -a 'Haider MESHAL' official-nginx-dev do180/mynginx
podman tag do180/mynginx do180/mynginx:v1.0
podman rmi --force do180/mynginx:v1.0-SNAPSHOT
podman run -d --name my-nginx -p 8280:80 do180/mynginx:v1.0
curl 127.0.0.1:8280/index.html
lab image-review grade
------------------------------------------------------------------------------------------------------------------
Lab Excersise (10)
------------------------------------------------------------------------------------------------------------------
lab dockerfile-create start
vim /home/student/DO180/labs/dockerfile-create/Containerfile
FROM ubi8/ubi:8.3
MAINTAINER Haider MESHAL <haider.meshal@techiware.com>
LABEL description="A custom Apache container based on UBI 8"
RUN yum install -y httpd && \
    yum clean all
RUN echo "Hello from Containerfile" > /var/www/html/index.html
EXPOSE 80
CMD ["httpd", "-D", "FOREGROUND"]
cd /home/student/DO180/labs/dockerfile-create
podman build --layers=false -t do180/apache .
podman images
podman run --name lab-apache -d -p 10080:80 do180/apache
podman ps
curl 127.0.0.1:10080
lab dockerfile-create finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (11)
------------------------------------------------------------------------------------------------------------------
lab dockerfile-review start
vim /home/student/DO180/labs/dockerfile-review/Containerfile

podman build --layers=false -t do180/custom-apache .
podman run --name containerfile -d -p 20080:80 do180/custom-apache
podman ps
curl 127.0.0.1:20080
lab dockerfile-review finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (12)
------------------------------------------------------------------------------------------------------------------
lab openshift-resources start
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-mysql-openshift
oc new-app --template=mysql-persistent -p MYSQL_USER=user1 -p MYSQL_PASSWORD=mypa55 -p MYSQL_DATABASE=testdb -p MYSQL_ROOT_PASSWORD=r00tpa55 -p VOLUME_CAPACITY=10Gi
oc status
oc get pods
oc describe pod mysql-1-5qg9x
oc get svc
oc describe service mysql
oc get pvc
oc describe pvc/mysql
oc port-forward mysql-1-5qg9x 3306:3306
mysql -uuser1 -pmypa55 --protocol tcp -h localhost
show databases;
exit
^C
oc delete project ${RHT_OCP4_DEV_USER}-mysql-openshift
lab openshift-resources finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (13)
------------------------------------------------------------------------------------------------------------------
lab openshift-routes start
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-route
oc new-app --docker-image=quay.io/redhattraining/php-hello-dockerfile --name php-helloworld
oc get pods -w
oc logs -f php-helloworld-74bb86f6cb-9rv82
oc describe svc/php-helloworld
oc expose svc/php-helloworld
oc describe route
curl php-helloworld-${RHT_OCP4_DEV_USER}-route.${RHT_OCP4_WILDCARD_DOMAIN}
oc delete route/php-helloworld
oc expose svc/php-helloworld --name=${RHT_OCP4_DEV_USER}-xyz
oc describe route
curl ${RHT_OCP4_DEV_USER}-xyz-${RHT_OCP4_DEV_USER}-route.${RHT_OCP4_WILDCARD_DOMAIN}
lab openshift-routes finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (14)
------------------------------------------------------------------------------------------------------------------
lab openshift-s2i start
cd ~/DO180-apps
git checkout master
git checkout -b s2i
git push -u origin s2i
vim php-helloworld/index.php
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-s2i
oc new-app php:7.3 --name=php-helloworld https://github.com/${RHT_OCP4_GITHUB_USER}/DO180-apps#s2i --context-dir php-helloworld
oc get pods
oc logs --all-containers -f php-helloworld-1-build
oc describe deployment/php-helloworld
oc expose service php-helloworld --name ${RHT_OCP4_DEV_USER}-helloworld
oc get route -o jsonpath='{..spec.host}{"\n"}'
curl -s ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}
vim ~/DO180-apps/php-helloworld/index.php
  --> print "A change is a coming!\n";
git add .
git commit -m 'Changed index page contents.'
git push origin s2i
oc start-build php-helloworld
oc logs php-helloworld-2-build -f
oc get pods
curl -s ${RHT_OCP4_DEV_USER}-helloworld-${RHT_OCP4_DEV_USER}-s2i.${RHT_OCP4_WILDCARD_DOMAIN}
lab openshift-s2i finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (15)
------------------------------------------------------------------------------------------------------------------
lab openshift-webconsole start
cd ~/DO180-apps
git checkout master
git checkout -b console
git push -u origin console
source /usr/local/etc/ocp4.config
echo $RHT_OCP4_WILDCARD_DOMAIN
visit  https://console-openshift-console.${RHT_OCP4_WILDCARD_DOMAIN}
  --> ON SITE WORKS
oc delete all --selector app=php-helloworld
lab openshift-webconsole finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (16)
------------------------------------------------------------------------------------------------------------------
lab openshift-review start
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-ocp
oc new-app php:7.3 --name=temps https://github.com/RedHatTraining/DO180-apps --context-dir temps
oc expose service temps --name temps
oc get route -o jsonpath='{..spec.host}{"\n"}'
curl -s http://temps-${RHT_OCP4_DEV_USER}-ocp.${RHT_OCP4_WILDCARD_DOMAIN}
lab openshift-review grade
lab openshift-review finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (17)
------------------------------------------------------------------------------------------------------------------
lab multicontainer-design start
podman login registry.redhat.io
vi /home/student/DO180/labs/multicontainer-design/deploy/nodejs/Containerfile
ip -br addr list | grep eth0
vi /home/student/DO180/labs/multicontainer-design/deploy/nodejs/nodejs-source/models/db.js
cd ~/DO180/labs/multicontainer-design/deploy/nodejs
./build.sh
podman images --format "table {{.ID}} {{.Repository}} {{.Tag}}"
-----------------------------------------------------------------------------------
vi /home/student/DO180/labs/multicontainer-design/deploy/nodejs/networked/run.sh
  odman run -d --name mysql -e MYSQL_DATABASE=items -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_ROOT_PASSWORD=r00tpa55 -v $PWD/work/data:/var/lib/mysql/data -p 30306:3306 registry.redhat.io/rhel8/mysql-80:1
  sleep 9
  podman run -d --name todoapi -e MYSQL_DATABASE=items -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -p 30080:30080 do180/todonodejs
  sleep 9
-----------------------------------------------------------------------------------
cd /home/student/DO180/labs/multicontainer-design/deploy/nodejs/networked
./run.sh
podman ps --format="table {{.ID}} {{.Names}} {{.Image}} {{.Status}}"
mysql -uuser1 -h 172.25.250.9 -pmypa55 -P30306 items < /home/student/DO180/labs/multicontainer-design/deploy/nodejs/networked/db.sql
podman exec -it todoapi env
curl -w "\n" http://127.0.0.1:30080/todo/api/items/1
cd ~
lab multicontainer-design finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (18)
------------------------------------------------------------------------------------------------------------------
lab multicontainer-application start
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-application
vi /home/student/DO180/labs/multicontainer-application/todo-app.yml
cd /home/student/DO180/labs/multicontainer-application
oc create  -f todo-app.yml
oc get pods -w
Ctrl+C
oc port-forward mysql 3306:3306
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P3306 items < db.sql
oc expose service todoapi
oc status | grep -o "http:.*com"
curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
cd ~
lab multicontainer-application finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (19)
------------------------------------------------------------------------------------------------------------------
lab multicontainer-openshift start
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-template
vi /home/student/DO180/labs/multicontainer-openshift/todo-template.json
cd /home/student/DO180/labs/multicontainer-openshift
oc process -f todo-template.json | oc create -f -
oc get pods -w
Ctrl+C
oc port-forward mysql 3306:3306
cd /home/student/DO180/labs/multicontainer-openshift
mysql -uuser1 -h 127.0.0.1 -pmypa55 -P3306 items < db.sql
^C
oc expose service todoapi
oc status | grep -o "http:.*com"
curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
cd ~
lab multicontainer-openshift finish
------------------------------------------------------------------------------------------------------------------
Lab Excersise (20)
------------------------------------------------------------------------------------------------------------------
lab multicontainer-review start
cd ~/DO180/labs/multicontainer-review
source /usr/local/etc/ocp4.config
oc login -u ${RHT_OCP4_DEV_USER} -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}
oc new-project ${RHT_OCP4_DEV_USER}-deploy
podman login quay.io
cd images/mysql
podman login registry.redhat.io
podman build --layers=false -t do180-mysql-80-rhel8 .
podman tag do180-mysql-80-rhel8 quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-80-rhel8
podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-mysql-80-rhel8
cd ..
cd quote-php
podman build --layers=false -t do180-quote-php  .
podman tag do180-quote-php quay.io/${RHT_OCP4_QUAY_USER}/do180-quote-php
podman push quay.io/${RHT_OCP4_QUAY_USER}/do180-quote-php
cd /home/student/DO180/labs/multicontainer-review/
vi quote-php-template.json
oc create -f quote-php-template.json -n ${RHT_OCP4_DEV_USER}-deploy
oc process quote-php-persistent -p RHT_OCP4_QUAY_USER=${RHT_OCP4_QUAY_USER} | oc create -f -
oc get pods -w
oc expose service quote-php
oc status | grep -o "http:.*com"
curl -w "\n" $(oc status | grep -o "http:.*com")/todo/api/items/1
lab multicontainer-review grade
lab multicontainer-review finish
